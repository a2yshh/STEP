import java.io.Serializable;
import java.text.NumberFormat;
import java.util.*;

public class EmployeeBean implements Serializable {
    private String employeeId;
    private String firstName;
    private String lastName;
    private double salary;
    private String department;
    private Date hireDate;
    private boolean isActive;

    public EmployeeBean() {}

    public EmployeeBean(String employeeId, String firstName, String lastName,
                        double salary, String department, Date hireDate, boolean isActive) {
        this.employeeId = employeeId;
        this.firstName = firstName;
        this.lastName = lastName;
        this.salary = salary;
        this.department = department;
        this.hireDate = hireDate;
        this.isActive = isActive;
    }

    public String getEmployeeId() { return employeeId; }
    public void setEmployeeId(String id) { this.employeeId = id; }

    public String getFirstName() { return firstName; }
    public void setFirstName(String name) { this.firstName = name; }

    public String getLastName() { return lastName; }
    public void setLastName(String name) { this.lastName = name; }

    public double getSalary() { return salary; }
    public void setSalary(double salary) { if (salary > 0) this.salary = salary; }

    public String getDepartment() { return department; }
    public void setDepartment(String dept) { this.department = dept; }

    public Date getHireDate() { return hireDate; }
    public void setHireDate(Date hireDate) { this.hireDate = hireDate; }

    public boolean isActive() { return isActive; }
    public void setActive(boolean active) { this.isActive = active; }

    public String getFullName() { return firstName + " " + lastName; }
    public int getYearsOfService() {
        Calendar start = Calendar.getInstance();
        start.setTime(hireDate);
        return Calendar.getInstance().get(Calendar.YEAR) - start.get(Calendar.YEAR);
    }
    public String getFormattedSalary() {
        return NumberFormat.getCurrencyInstance().format(salary);
    }

    @Override
    public String toString() {
        return getFullName() + " (" + employeeId + "), Dept: " + department +
               ", Salary: " + getFormattedSalary();
    }

    @Override
    public boolean equals(Object o) {
        if (!(o instanceof EmployeeBean)) return false;
        return employeeId.equals(((EmployeeBean) o).employeeId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(employeeId);
    }

    public static void main(String[] args) {
        EmployeeBean e1 = new EmployeeBean("E101", "John", "Doe", 50000, "IT", new Date(), true);
        EmployeeBean e2 = new EmployeeBean();
        e2.setEmployeeId("E102");
        e2.setFirstName("Jane");
        e2.setLastName("Smith");
        e2.setSalary(60000);
        e2.setDepartment("HR");
        e2.setHireDate(new Date());
        e2.setActive(true);

        System.out.println(e1);
        System.out.println(e2.getFullName() + " Salary: " + e2.getFormattedSalary());

        List<EmployeeBean> employees = Arrays.asList(e1, e2);
        employees.stream().filter(EmployeeBean::isActive).forEach(System.out::println);
    }
}
